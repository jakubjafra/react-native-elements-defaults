// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`with basic theme applied OldSlider renders correctly 1`] = `
<View
  animationType="timing"
  onLayout={[Function]}
  step={0}
  style={
    Array [
      Object {
        "height": 40,
        "justifyContent": "center",
      },
      false,
      undefined,
    ]
  }
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        Object {
          "borderRadius": 2,
          "height": 4,
        },
        undefined,
      ]
    }
  />
  <View
    collapsable={undefined}
    style={
      Object {
        "backgroundColor": "#3f3f3f",
        "borderRadius": 2,
        "height": 4,
        "marginTop": -0,
        "opacity": 0,
        "position": "absolute",
        "width": 0,
      }
    }
  />
  <View
    collapsable={undefined}
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 10,
        "height": 20,
        "opacity": 0,
        "position": "absolute",
        "top": 22,
        "transform": Array [
          Object {
            "translateX": 0,
          },
          Object {
            "translateY": -0,
          },
        ],
        "width": 20,
      }
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {},
      ]
    }
  />
</View>
`;

exports[`with basic theme applied Slider renders correctly 1`] = `
<View
  animationType="timing"
  onLayout={[Function]}
  step={0}
  style={
    Array [
      Object {
        "height": 40,
        "justifyContent": "center",
      },
      false,
      undefined,
    ]
  }
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        Object {
          "borderRadius": 2,
          "height": 4,
        },
        Array [
          undefined,
          Object {
            "backgroundColor": "red",
          },
        ],
      ]
    }
  />
  <View
    collapsable={undefined}
    style={
      Object {
        "backgroundColor": "#3f3f3f",
        "borderRadius": 2,
        "height": 4,
        "marginTop": -0,
        "opacity": 0,
        "position": "absolute",
        "width": 0,
      }
    }
  />
  <View
    collapsable={undefined}
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 10,
        "height": 20,
        "opacity": 0,
        "position": "absolute",
        "top": 22,
        "transform": Array [
          Object {
            "translateX": 0,
          },
          Object {
            "translateY": -0,
          },
        ],
        "width": 20,
      }
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {},
      ]
    }
  />
</View>
`;

exports[`with no theme applied OldSlider renders correctly 1`] = `
<View
  animationType="timing"
  onLayout={[Function]}
  step={0}
  style={
    Array [
      Object {
        "height": 40,
        "justifyContent": "center",
      },
      false,
      undefined,
    ]
  }
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        Object {
          "borderRadius": 2,
          "height": 4,
        },
        undefined,
      ]
    }
  />
  <View
    collapsable={undefined}
    style={
      Object {
        "backgroundColor": "#3f3f3f",
        "borderRadius": 2,
        "height": 4,
        "marginTop": -0,
        "opacity": 0,
        "position": "absolute",
        "width": 0,
      }
    }
  />
  <View
    collapsable={undefined}
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 10,
        "height": 20,
        "opacity": 0,
        "position": "absolute",
        "top": 22,
        "transform": Array [
          Object {
            "translateX": 0,
          },
          Object {
            "translateY": -0,
          },
        ],
        "width": 20,
      }
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {},
      ]
    }
  />
</View>
`;

exports[`with no theme applied Slider renders correctly 1`] = `
<View
  animationType="timing"
  onLayout={[Function]}
  step={0}
  style={
    Array [
      Object {
        "height": 40,
        "justifyContent": "center",
      },
      false,
      undefined,
    ]
  }
  thumbTouchSize={
    Object {
      "height": 40,
      "width": 40,
    }
  }
  value={0}
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#b3b3b3",
        },
        Object {
          "borderRadius": 2,
          "height": 4,
        },
        undefined,
      ]
    }
  />
  <View
    collapsable={undefined}
    style={
      Object {
        "backgroundColor": "#3f3f3f",
        "borderRadius": 2,
        "height": 4,
        "marginTop": -0,
        "opacity": 0,
        "position": "absolute",
        "width": 0,
      }
    }
  />
  <View
    collapsable={undefined}
    onLayout={[Function]}
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 10,
        "height": 20,
        "opacity": 0,
        "position": "absolute",
        "top": 22,
        "transform": Array [
          Object {
            "translateX": 0,
          },
          Object {
            "translateY": -0,
          },
        ],
        "width": 20,
      }
    }
  />
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {},
      ]
    }
  />
</View>
`;
