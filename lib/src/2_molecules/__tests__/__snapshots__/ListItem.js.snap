// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListItem with basic theme applied ListItem renders correctly 1`] = `
<View
  disabled={false}
  onLongPress={undefined}
  onPress={undefined}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
        "borderBottomColor": "#bbb",
        "borderBottomWidth": 1,
        "paddingBottom": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
      Object {
        "backgroundColor": "red",
      },
      false,
      false,
    ]
  }
  underlayColor="white"
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "marginLeft": 10,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={undefined}
      >
        <View />
      </View>
      <View
        style={undefined}
      >
        <View />
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "flex-end",
          "justifyContent": "center",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        onPress={undefined}
        style={
          Array [
            false,
            false,
            false,
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
        underlayColor="white"
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#bdc6cf",
                "fontSize": 28,
              },
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ],
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          î—Œ
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`ListItem with basic theme applied OldListItem renders correctly 1`] = `
<View
  disabled={false}
  onLongPress={undefined}
  onPress={undefined}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
        "borderBottomColor": "#bbb",
        "borderBottomWidth": 1,
        "paddingBottom": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
      undefined,
      false,
      false,
    ]
  }
  underlayColor="white"
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "marginLeft": 10,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={undefined}
      >
        <View />
      </View>
      <View
        style={undefined}
      >
        <View />
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "flex-end",
          "justifyContent": "center",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        onPress={undefined}
        style={
          Array [
            false,
            false,
            false,
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
        underlayColor="white"
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#bdc6cf",
                "fontSize": 28,
              },
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ],
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          î—Œ
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`ListItem with no theme applied ListItem renders correctly 1`] = `
<View
  disabled={false}
  onLongPress={undefined}
  onPress={undefined}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
        "borderBottomColor": "#bbb",
        "borderBottomWidth": 1,
        "paddingBottom": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
      undefined,
      false,
      false,
    ]
  }
  underlayColor="white"
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "marginLeft": 10,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={undefined}
      >
        <View />
      </View>
      <View
        style={undefined}
      >
        <View />
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "flex-end",
          "justifyContent": "center",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        onPress={undefined}
        style={
          Array [
            false,
            false,
            false,
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
        underlayColor="white"
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#bdc6cf",
                "fontSize": 28,
              },
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ],
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          î—Œ
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`ListItem with no theme applied OldListItem and ListItem returns the same thing if no theme is applied 1`] = `"[2mCompared values have no visual difference.[22m"`;

exports[`ListItem with no theme applied OldListItem renders correctly 1`] = `
<View
  disabled={false}
  onLongPress={undefined}
  onPress={undefined}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
        "borderBottomColor": "#bbb",
        "borderBottomWidth": 1,
        "paddingBottom": 10,
        "paddingRight": 10,
        "paddingTop": 10,
      },
      undefined,
      false,
      false,
    ]
  }
  underlayColor="white"
>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "marginLeft": 10,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={undefined}
      >
        <View />
      </View>
      <View
        style={undefined}
      >
        <View />
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "flex-end",
          "justifyContent": "center",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        onPress={undefined}
        style={
          Array [
            false,
            false,
            false,
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
        underlayColor="white"
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#bdc6cf",
                "fontSize": 28,
              },
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ],
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          î—Œ
        </Text>
      </View>
    </View>
  </View>
</View>
`;
